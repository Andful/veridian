on: [push, pull_request]

name: CI

jobs:
  test:
    name: Test Suite
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2
        with:
          submodules: true

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: cache cargo dirs
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Run cargo test
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --all-features

  lints:
    name: Lints
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2
        with:
          submodules: true

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: rustfmt, clippy

      - name: cache cargo dirs
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Run cargo fmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

      - name: Run cargo clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --all-features -- -D warnings

  publish:
    name: Create Release
    needs: test
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}

    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: nightly
          release_name: nightly
          body: |
            This is an auto-generated release from the last successful build
            This build is not guaranteed to be stable
            Included Assets
            - Ubuntu build (with [slang](https://github.com/MikePopoloski/slang) linting)
            - CentOS 7 (RHEL 7 Compatible) build
            - vscode client extension (veridian.vsix)
                - manually install inside vscode or run `code --install-extension veridian.vsix`
          draft: false
          prerelease: true

  build_ubuntu:
    name: Build Ubuntu
    needs: publish
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: cache cargo dirs
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Run cargo build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --all-features --release

      - name: Create archive
        run: |
          strip target/release/veridian
          cp target/release/veridian .
          tar -czvf veridian-ubuntu-20.04.tar.gz veridian

      - name: Upload assets
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.publish.outputs.upload_url }}
          asset_path: veridian-ubuntu-20.04.tar.gz
          asset_name: veridian-ubuntu-20.04.tar.gz
          asset_content_type: application/gzip

  build_centos:
    name: Build Centos
    needs: publish
    runs-on: ubuntu-latest
    container:
      image: vivekmalneedi/centos7-rust
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: cache cargo dirs
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Run cargo build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release

      - name: Create archive
        run: |
          strip target/release/veridian
          cp target/release/veridian .
          tar -czvf veridian-centos-7.tar.gz veridian

      - name: Upload assets
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.publish.outputs.upload_url }}
          asset_path: veridian-centos-7.tar.gz
          asset_name: veridian-centos-7.tar.gzvariable github
          asset_content_type: application/gzip

  build_vscode:
    name: Build vscode extension
    needs: publish
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: "12"
          check-latest: true
      - name: build extension
        working-directory: extensions/vscode
        run: |
          npm install
          npm install vsce
          vsce package -o veridian.vsix
      - name: Upload assets
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.publish.outputs.upload_url }}
          asset_path: extensions/vscode/veridian.vsix
          asset_name: veridian.vsix
          asset_content_type: application/octet-stream
